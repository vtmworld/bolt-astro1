---
interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
}

const { currentPage, totalPages, baseUrl } = Astro.props;
---

<nav class="pagination" aria-label="Pagination">
  {currentPage > 1 && (
    <a href={`${baseUrl}/${currentPage - 1}`} class="pagination-link">Previous</a>
  )}
  
  {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
    <a
      href={`${baseUrl}/${page}`}
      class={`pagination-link ${currentPage === page ? 'active' : ''}`}
      aria-current={currentPage === page ? 'page' : undefined}
    >
      {page}
    </a>
  ))}

  {currentPage < totalPages && (
    <a href={`${baseUrl}/${currentPage + 1}`} class="pagination-link">Next</a>
  )}
</nav>

<style>
  .pagination {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    margin: 2rem 0;
  }

  .pagination-link {
    padding: 0.5rem 1rem;
    border: 1px solid #e2e8f0;
    border-radius: 4px;
    color: #4a5568;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .pagination-link:hover {
    background: #f7fafc;
  }

  .pagination-link.active {
    background: #4f46e5;
    color: white;
    border-color: #4f46e5;
  }
</style>